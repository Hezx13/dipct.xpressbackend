openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for managing users
servers:
  - url: http://localhost:4501
paths:
  /user/register:
    post:
      tags:
        - user
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                firstName:
                  type: string
                lastName:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: User already exists
        '500':
          description: Error registering new user
  /user/login:
    post:
      tags:
        - user
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful, token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: User does not exist
        '401':
          description: Wrong password
        '500':
          description: Internal server error
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: The user ID
        email:
          type: string
          description: The user's email
        name:
          type: string
          description: The user's name
        password:
          type: string
          description: The user's password
        role:
          type: string
          description: The user's role
        socials:
          type: array
          items:
            type: string
          description: Social media handles of the user
    NewUser:
      type: object
      properties:
        email:
          type: string
          description: The user's email
        name:
          type: string
          description: The user's name
        password:
          type: string
          description: The user's password
        role:
          type: string
          description: The user's role
        socials:
          type: array
          items:
            type: string
          description: Social media handles of the user
